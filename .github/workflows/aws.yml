name: Python application CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Installation de Git LFS
      run: |
        sudo apt-get install git-lfs
        git lfs install

    - name: Checkout du code source
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Configuration de Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - name: Installation des dépendances Python
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Cloner le dépôt sur l'EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOSTNAME: ${{ secrets.HOST }}
        USER_NAME: ${{ secrets.EC2_USER }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          if [ ! -d /home/ubuntu/unet_api ]; then
            git clone https://github.com/NetZach777/unet_api.git /home/ubuntu/unet_api;
          else
            cd /home/ubuntu/unet_api && git pull;
          fi
        '
        rm private_key

    - name: Déploiement sur EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOSTNAME: ${{ secrets.HOST }}
        USER_NAME: ${{ secrets.EC2_USER }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET_NAME: 'awsmodelseg'
        S3_MODEL_KEY: 'unet_light_model_weighted_data_normal.h5'
        LOCAL_MODEL_PATH: '/home/ubuntu/unet_api/models/unet_light_model_weighted_data_normal.h5'
      run: |
        # Ajouter la clé privée à un fichier temporaire
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key

        # Se connecter à l'EC2 et exécuter les commandes de déploiement
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          cd /home/ubuntu/unet_api

          # Installer unzip si nécessaire
          sudo apt-get update
          sudo apt-get install -y unzip

          # Installer AWS CLI
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

          # Assurer que AWS CLI est bien installé
          export PATH=$PATH:/usr/local/bin/aws

          # Configuration des credentials AWS pour télécharger depuis S3
          export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

          # Télécharger le modèle depuis S3 vers le chemin local
          mkdir -p $(dirname ${LOCAL_MODEL_PATH})
          /usr/local/bin/aws s3 cp s3://${S3_BUCKET_NAME}/${S3_MODEL_KEY} ${LOCAL_MODEL_PATH}

          # Activer l'environnement conda et installer les dépendances
          source /home/ubuntu/miniconda3/etc/profile.d/conda.sh
          conda activate unet_api_env
          pip install -r requirements.txt

          # Démarrer l'application avec uvicorn
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 > uvicorn.log 2>&1 &
        '

        # Supprimer la clé privée après l'utilisation
        rm private_key
