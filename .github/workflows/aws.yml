name: Python application CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Installation de Git LFS
      run: |
        sudo apt-get update
        sudo apt-get install -y git-lfs
        git lfs install

    - name: Checkout du code source
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Configuration de Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - name: Préparation de l'environnement EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOSTNAME: ${{ secrets.HOST }}
        USER_NAME: ${{ secrets.EC2_USER }}
      run: |
        echo "$PRIVATE_KEY" > private_key
        chmod 600 private_key
        
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          # Initialisation de Conda
          eval "$(~/miniconda3/bin/conda shell.bash hook)"
          conda init bash
          source ~/.bashrc
          
          # Création de l'environnement
          conda create -n unet_api_env python=3.9 -y
          
          # Activation et installation des packages
          conda activate unet_api_env
          pip install fastapi uvicorn python-multipart pillow tensorflow boto3 python-dotenv

          # Création des dossiers
          mkdir -p /home/ubuntu/unet_api/models
        '

    - name: Configuration AWS et téléchargement du modèle
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOSTNAME: ${{ secrets.HOST }}
        USER_NAME: ${{ secrets.EC2_USER }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          # Configuration AWS
          mkdir -p ~/.aws
          echo "[default]
          aws_access_key_id=${AWS_ACCESS_KEY_ID}
          aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}
          region=eu-north-1" > ~/.aws/credentials
          
          # Téléchargement du modèle
          cd /home/ubuntu/unet_api
          aws s3 cp s3://private-modelseg-637423565561/unet_light_model_weighted_data_normal.h5 models/
        '

    - name: Déploiement de l'application
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOSTNAME: ${{ secrets.HOST }}
        USER_NAME: ${{ secrets.EC2_USER }}
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          # Arrêt du service existant
          pkill -f "uvicorn main:app" || true
          
          # Activation de Conda et démarrage de l'application
          eval "$(~/miniconda3/bin/conda shell.bash hook)"
          conda activate unet_api_env
          cd /home/ubuntu/unet_api
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 > uvicorn.log 2>&1 &
          
          # Vérification
          sleep 10
          if pgrep -f "uvicorn main:app" > /dev/null; then
              echo "✅ Application démarrée avec succès"
          else
              echo "❌ Erreur au démarrage de l'application"
              exit 1
          fi
        '
        rm private_key

    - name: Vérification finale
      env:
        HOSTNAME: ${{ secrets.HOST }}
      run: |
        sleep 15
        if curl -f http://${HOSTNAME}:8000/health; then
            echo "✅ Application en ligne et fonctionnelle"
        else
            echo "❌ L'application ne répond pas"
            exit 1
        fi
